
USE DB_HUY;
-- 1. liệt kê các danh sách
SELECT P.ID, P.SKU, P.TITLE, P.PRICE, P.SALEPRICE, P.FEATUREDIMAGE, 
	GROUP_CONCAT(DISTINCT G.GALLAREY SEPARATOR ', ') AS GALLAREYS,
	P.DESCRIPT, P.CREADTEDDATE, P.MODIFIEDDATE,
        GROUP_CONCAT(DISTINCT C.CATEGORY SEPARATOR ', ') AS CATEGORIES,
        GROUP_CONCAT(DISTINCT T.TAG SEPARATOR ', ') AS TAGS
FROM PRODUCTS 		AS P
INNER JOIN CATEGORYS 	AS C
INNER JOIN TAGS		AS T
INNER JOIN GALLAREYS	AS G
ON 
	P.ID = C.ID 
	AND P.ID = T.ID 
    	AND P.ID = G.ID
GROUP BY P.ID;

-- 2. tìm kiếm sản phẩm theo tên: có chữ 'pro' trong tên;
SELECT P.ID, P.SKU, P.TITLE, P.PRICE, P.SALEPRICE, P.FEATUREDIMAGE, 
	GROUP_CONCAT(DISTINCT G.GALLAREY SEPARATOR ', ') AS GALLAREYS,
	P.DESCRIPT, P.CREADTEDDATE, P.MODIFIEDDATE,
       	GROUP_CONCAT(DISTINCT C.CATEGORY SEPARATOR ', ') AS CATEGORIES,
       	GROUP_CONCAT(DISTINCT T.TAG SEPARATOR ', ') AS TAGS
FROM PRODUCTS 		AS P
INNER JOIN CATEGORYS 	AS C
INNER JOIN TAGS		AS T
INNER JOIN GALLAREYS	AS G
ON 
	P.ID = C.ID 
	AND P.ID = T.ID 
    	AND P.ID = G.ID
WHERE P.TITLE LIKE '%pro%'
GROUP BY P.ID;

-- 3. Lấy danh sách sản phẩm theo category/tag nào đó(có thể phân trang)
-- 3.1. lấy theo tag
SELECT P.ID, P.SKU, P.TITLE, P.PRICE, P.SALEPRICE, P.FEATUREDIMAGE, 
		GROUP_CONCAT(DISTINCT G.GALLAREY SEPARATOR ', ') AS GALLAREYS,
		P.DESCRIPT, P.CREADTEDDATE, P.MODIFIEDDATE,
		GROUP_CONCAT(DISTINCT C.CATEGORY SEPARATOR ', ') AS CATEGORIES,
		GROUP_CONCAT(DISTINCT T.TAG SEPARATOR ', ') AS TAGS
FROM PRODUCTS 		AS P
INNER JOIN CATEGORYS 	AS C
INNER JOIN TAGS		AS T
INNER JOIN GALLAREYS	AS G
ON 
	P.ID = C.ID 
	AND P.ID = T.ID 
    	AND P.ID = G.ID
WHERE T.TAG LIKE 'SALE'
GROUP BY P.ID
LIMIT 2;

-- 3.2. lấy theo category
SELECT P.ID, P.SKU, P.TITLE, P.PRICE, P.SALEPRICE, P.FEATUREDIMAGE, 
		GROUP_CONCAT(DISTINCT G.GALLAREY SEPARATOR ', ') AS GALLAREYS,
		P.DESCRIPT, P.CREADTEDDATE, P.MODIFIEDDATE,
		C.CATEGORY,
		GROUP_CONCAT(DISTINCT T.TAG SEPARATOR ', ') AS TAGS
FROM PRODUCTS 		AS P
INNER JOIN CATEGORYS 	AS C
INNER JOIN TAGS		AS T
INNER JOIN GALLAREYS	AS G
ON 
	P.ID = C.ID 
	AND P.ID = T.ID 
    	AND P.ID = G.ID
WHERE C.CATEGORY LIKE 'home'
GROUP BY P.ID
LIMIT 1;

-- 4. sắp xếp danh sách theo title, price, created date
-- 4.1. sắp xếp theo title:
SELECT P.ID, P.SKU, P.TITLE, P.PRICE, P.SALEPRICE, P.FEATUREDIMAGE, 
	GROUP_CONCAT(DISTINCT G.GALLAREY SEPARATOR ', ') AS GALLAREYS,
	P.DESCRIPT, P.CREADTEDDATE, P.MODIFIEDDATE,
        GROUP_CONCAT(DISTINCT C.CATEGORY SEPARATOR ', ') AS CATEGORIES,
        GROUP_CONCAT(DISTINCT T.TAG SEPARATOR ', ') AS TAGS
FROM PRODUCTS 		AS P
INNER JOIN CATEGORYS 	AS C
INNER JOIN TAGS		AS T
INNER JOIN GALLAREYS	AS G
ON 
	P.ID = C.ID 
	AND P.ID = T.ID 
    	AND P.ID = G.ID
GROUP BY P.ID
ORDER BY P.TITLE DESC;


-- 4.2. sắp xếp theo price:
SELECT P.ID, P.SKU, P.TITLE, P.PRICE, P.SALEPRICE, P.FEATUREDIMAGE, 
	GROUP_CONCAT(DISTINCT G.GALLAREY SEPARATOR ', ') AS GALLAREYS,
	P.DESCRIPT, P.CREADTEDDATE, P.MODIFIEDDATE,
        GROUP_CONCAT(DISTINCT C.CATEGORY SEPARATOR ', ') AS CATEGORIES,
        GROUP_CONCAT(DISTINCT T.TAG SEPARATOR ', ') AS TAGS
FROM PRODUCTS 		AS P
INNER JOIN CATEGORYS 	AS C
INNER JOIN TAGS		AS T
INNER JOIN GALLAREYS	AS G
ON 
	P.ID = C.ID 
	AND P.ID = T.ID 
    	AND P.ID = G.ID
GROUP BY P.ID
ORDER BY P.PRICE DESC;


-- 4.3. sắp xếp theo created date:
SELECT P.ID, P.SKU, P.TITLE, P.PRICE, P.SALEPRICE, P.FEATUREDIMAGE, 
	GROUP_CONCAT(DISTINCT G.GALLAREY SEPARATOR ', ') AS GALLAREYS,
	P.DESCRIPT, P.CREADTEDDATE, P.MODIFIEDDATE,
        GROUP_CONCAT(DISTINCT C.CATEGORY SEPARATOR ', ') AS CATEGORIES,
        GROUP_CONCAT(DISTINCT T.TAG SEPARATOR ', ') AS TAGS
FROM PRODUCTS 		AS P
INNER JOIN CATEGORYS 	AS C
INNER JOIN TAGS		AS T
INNER JOIN GALLAREYS	AS G
ON 
	P.ID = C.ID 
	AND P.ID = T.ID 
    	AND P.ID = G.ID
GROUP BY P.ID
ORDER BY P.CREADTEDDATE DESC;


-- 5. create, update, delete products
-- 5.1.a create product 7
INSERT INTO PRODUCTS (
	SKU, 
	TITLE, 
	PRICE, 
	SALEPRICE, 
	FEATUREDIMAGE, 
	DESCRIPT, 
	CREADTEDDATE,
	MODIFIEDDATE
)
VALUES 
	('SKU007', 'Product 7', 22.99, 25.99, 'example.com777.jpg', 'This is the description of Product 7', '2023-06-01 10:15', '2023-06-01 11:15');

-- SELECT LAST_INSERT_ID();

INSERT INTO GALLAREYS (ID, GALLAREY) 
VALUES 
	((SELECT LAST_INSERT_ID()), 'example.com/image78.jpg'),
    	((SELECT LAST_INSERT_ID()), 'example.com/image79.jpg');

INSERT INTO CATEGORYS (ID, CATEGORY) 
VALUES 
	((SELECT LAST_INSERT_ID()), 'Home'),
    	((SELECT LAST_INSERT_ID()), 'Sports'),
    	((SELECT LAST_INSERT_ID()), 'Beauty');

INSERT INTO TAGS (ID, TAG) 
VALUES 
	((SELECT LAST_INSERT_ID()), 'New'),
    	((SELECT LAST_INSERT_ID()), 'Trend');

SELECT * FROM products;
-- ====================================================================================
-- 1. update products
-- vd: cập nhật gallarey của product 7: thêm mới img vào producT 7
-- SELECT ID FROM PRODUCTS WHERE TITLE LIKE 'ProDuct 7';
INSERT INTO GALLAREYS (ID, GALLAREY) 
VALUES 
	((SELECT ID FROM PRODUCTS WHERE TITLE LIKE 'ProDuct 7'), 'example.com/image778.jpg');
    
UPDATE GALLAREYS 
SET GALLAREY = 'example.com/image778888.jpg'
WHERE ID = (SELECT ID FROM PRODUCTS WHERE TITLE LIKE 'ProDuct 7') AND GALLAREY LIKE '%image778%';

-- xóa product 7: xóa các bản ghi ở bảng con -> xóa bản ghi ở bảng gốc
-- xóa gallareys của product 7: 
DELETE FROM GALLAREYS 
WHERE ID = (SELECT ID FROM PRODUCTS WHERE TITLE LIKE 'ProDuct 7');

-- xóa categorys của product 7
DELETE FROM CATEGORYS 
WHERE ID = (SELECT ID FROM PRODUCTS WHERE TITLE LIKE 'ProDuct 7');

-- xóa tags của product 7
DELETE FROM TAGS 
WHERE ID = (SELECT ID FROM PRODUCTS WHERE TITLE LIKE 'ProDuct 7');

-- xóa product 7
DELETE FROM PRODUCTS 
WHERE TITLE LIKE 'ProDuct 7';


SELECT P.ID, P.SKU, P.TITLE, P.PRICE, P.SALEPRICE, P.FEATUREDIMAGE, 
	GROUP_CONCAT(DISTINCT G.GALLAREY SEPARATOR ', ') AS GALLAREYS,
	P.DESCRIPT, P.CREADTEDDATE, P.MODIFIEDDATE,
        GROUP_CONCAT(DISTINCT C.CATEGORY SEPARATOR ', ') AS CATEGORIES,
        GROUP_CONCAT(DISTINCT T.TAG SEPARATOR ', ') AS TAGS
FROM PRODUCTS 		AS P
INNER JOIN CATEGORYS 	AS C
INNER JOIN TAGS		AS T
INNER JOIN GALLAREYS	AS G
ON 
	P.ID = C.ID 
	AND P.ID = T.ID 
    	AND P.ID = G.ID
GROUP BY P.ID
HAVING FIND_IN_SET('New', GROUP_CONCAT(DISTINCT t.Name));